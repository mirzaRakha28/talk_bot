name: Deploy Go Application in Docker to VPS

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t mirzarakha2804/talk_bot:latest .
        docker push mirzarakha2804/talk_bot:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Write SSH key to file
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/mirza.pem
        chmod 600 ~/.ssh/mirza.pem

    - name: Start ssh-agent and add key
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/mirza.pem
        ssh-add -l  # Check if the SSH key was added successfully

    - name: Debug SSH connection
      run: |
        # Add VPS to known hosts to prevent prompt
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
        # Attempt to connect to VPS and run a simple command
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo 'Connection successful!'"
      
    - name: Deploy to VPS via SSH
      run: |
        # Deploy the application if the connection is successful
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          docker pull mirzarakha2804/talk_bot:latest
          docker stop talk_bot || true
          docker rm talk_bot || true
          docker run -d --name talk_bot mirzarakha2804/talk_bot:latest
        EOF
