name: Deploy Go Application in Docker to VPS

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t mirzarakha2804/talk_bot:latest .
        docker push mirzarakha2804/talk_bot:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set environment variables
      env:
        VPS_HOST: 103.175.219.140
        VPS_USER: arvalinno
      run: |
        echo "VPS_HOST: $VPS_HOST"
        echo "VPS_USER: $VPS_USER"
     - name: Transfer app.env to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 600 private_key.pem
          docker pull mirzarakha2804/talk_bot:latest
          docker stop myapp || true  # Stop the old container if running
          docker rm myapp || true    # Remove the old container if it exists
          docker run -d --name myapp -p 8080:8080 mirzarakha2804/talk_bot:latest
    # - name: Deploy to VPS via SSH
    #   uses: appleboy/ssh-action@v0.1.3
    #   with:
    #     host: ${{ env.VPS_HOST }}
    #     username: ${{ env.VPS_USER }}
    #     key: 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
    #     # Uncomment if your SSH key has a passphrase
    #     # passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }}
    #     script: |
          # docker pull mirzarakha2804/talk_bot:latest
          # docker stop myapp || true  # Stop the old container if running
          # docker rm myapp || true    # Remove the old container if it exists
          # docker run -d --name myapp -p 8080:8080 mirzarakha2804/talk_bot:latest

