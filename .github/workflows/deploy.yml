name: Deploy Go Application in Docker to VPS

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t mirzarakha2804/talk_bot:latest .
        docker push mirzarakha2804/talk_bot:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set environment variables
      env:
        VPS_HOST: 103.175.219.140
        VPS_USER: arvalinno
      run: |
        echo "VPS_HOST: $VPS_HOST"
        echo "VPS_USER: $VPS_USER"

    - name: Start ssh-agent
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}  # Your private SSH key for VPS access

    - name: Verify SSH key is loaded
      run: |
        ssh-add -l  # List added SSH keys to confirm

    - name: Deploy to VPS via SSH
      run: |
        # Add VPS to known hosts to prevent prompt
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
        # Deploying the application to VPS
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          # Pull the latest Docker image
          docker pull mirzarakha2804/talk_bot:latest

          # Stop and remove the existing container if it's running
          docker stop talk_bot || true
          docker rm talk_bot || true

          # Run the new container
          docker run -d --name talk_bot mirzarakha2804/talk_bot:latest
        EOF

    - name: Confirm Deployment Success
      run: |
        echo "Deployment to VPS completed successfully."
